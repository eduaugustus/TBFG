package br.com.mygame.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import br.com.mygame.classes.Criptografia;
import br.com.mygame.classes.Usuario;
import br.com.mygame.jdbcinterfaces.UsuarioDAO;

public class JDBCUsuarioDAO implements UsuarioDAO {

	private Connection conexao;

	public JDBCUsuarioDAO(Connection conexao) {
		this.conexao = conexao;
	}

	public boolean inserir(Usuario usuario) {
		
		String comando = "INSERT INTO usuarios (usuario, senha, permissao, nome, nascimento, email) VALUES (?,?,?,?,?,?)";
		PreparedStatement p;
		try {
			p = this.conexao.prepareStatement(comando);
			p.setString(1, usuario.getLogin());
			p.setString(2, Criptografia.criptografaSenha(usuario.getSenha()));
			p.setString(3, usuario.getPermissao());
			p.setString(4, usuario.getNome());
			p.setString(5, usuario.converteNascimentoParaBD());
			p.setString(6, usuario.getEmail());
			p.execute();
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}


	public Usuario buscarPorLogin(String login) {
		String comando = "SELECT * FROM usuarios WHERE usuario = '" + login + "'";
		Usuario usuario = new Usuario();
		try {
			java.sql.Statement stmt = conexao.createStatement();
			ResultSet rs = stmt.executeQuery(comando);
			while (rs.next()) {
				String nome = rs.getString("nome");
				String nascimento = usuario.converteNascimentoParaFrontend(rs.getString("nascimento"));
				String email = rs.getString("email");
				String senha = rs.getString("senha");
				String permissao = rs.getString("permissao");
				
		        usuario.setLogin(login);
		        usuario.setSenha(senha);
		        usuario.setPermissao(permissao);
		        usuario.setNome(nome);
		        usuario.setNascimento(nascimento);
		        usuario.setEmail(email);
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return usuario;
	}

	public boolean atualizar(Usuario usuario) {
		
		String comando = "UPDATE usuarios SET senha=?, nome=?, nascimento=?, email=?";
		comando += " WHERE usuario=?";
		PreparedStatement p;
		try {
			p = this.conexao.prepareStatement(comando);
			p.setString(1, Criptografia.criptografaSenha(usuario.getSenha()));
			p.setString(2, usuario.getNome());
			p.setString(3, usuario.converteNascimentoParaBD());
			p.setString(4, usuario.getEmail());
			p.setString(5, usuario.getLogin());
			p.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	public boolean deletar(String usuario) {
		String comando = "DELETE FROM usuarios WHERE usuario = '" + usuario +"'";
		Statement p;
		try {
			p = this.conexao.createStatement();
			p.execute(comando);
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	public List<Usuario> buscar(String nivel, String busca) {
		String comando = "SELECT * FROM usuarios ";
		if (!nivel.equals("2") || !busca.equals("")) {
			comando += "WHERE ";
		}
		if(!nivel.equals("2")) {
			comando += "permissao = " + nivel + "";
			if(!busca.equals("")) {
				comando += " AND ";
			}
		}
		if(!busca.equals("")) {
			comando += "(nome LIKE '%" + busca + "%' OR usuario LIKE '%" + busca + "%' OR email = '" + busca + "')";
		}
		System.out.println(comando);
		List<Usuario> listUsuario = new ArrayList<Usuario>();
		Usuario usuario = null;
		try {
			Statement stmt = conexao.createStatement(); 
			ResultSet rs = stmt.executeQuery(comando);
			while (rs.next()) {
				usuario = new Usuario();
				String login = rs.getString("usuario");
				String nome = rs.getString("nome");
				String nascimento = usuario.converteNascimentoParaFrontend(rs.getString("nascimento"));
				String email = rs.getString("email");
				String senha = rs.getString("senha");
				String permissao = rs.getString("permissao");
				
		        usuario.setLogin(login);
		        usuario.setSenha(senha);
		        usuario.setPermissao(permissao);
		        usuario.setNome(nome);
		        usuario.setNascimento(nascimento);
		        usuario.setEmail(email);
								
				listUsuario.add(usuario);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return listUsuario;
	}

}
